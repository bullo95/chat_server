version: '3.7'

services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: tcukeb6-tcukeb6
      MYSQL_DATABASE: dating_app
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    command: >
      --authentication-policy=caching_sha2_password
      --host-cache-size=0
      --mysqlx=0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ptcukeb6-tcukeb6"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
      - "443:443"
    environment:
      - PORT=443
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=tcukeb6-tcukeb6
      - DB_NAME=dating_app
      - SERVER_IP=0.0.0.0
      - NODE_ENV=development
      - DOMAIN=backend.vigilys.fr
    volumes:
      - ./certificates:/etc/letsencrypt:ro
      - ./public/uploads:/usr/src/app/public/uploads
      - ./database_dumps:/usr/src/app/database_dumps
    depends_on:
      - db
    command: >
      sh -c "
      while ! mysqladmin ping -h db -u root -ptcukeb6-tcukeb6 --silent; do
        echo 'Waiting for database...';
        sleep 3;
      done;
      node server.js;
      "
  nginx:
    image: nginx:latest
    volumes:
      - ./certbot/www:/var/www/certbot
    ports:
      - "8081:8081"  # Le port 8081 est exposÃ© pour le challenge ACME
    command: >
      sh -c "echo '
      server {
        listen 8081;
        server_name ${DOMAIN};
        location /.well-known/acme-challenge/ {
          root /var/www/certbot;
        }
      }
      ' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certificates:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment:
      - DOMAIN=${DOMAIN}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    entrypoint: sh -c "
      if [ ! -f /etc/letsencrypt/live/${DOMAIN}/fullchain.pem ] || ! openssl x509 -checkend 86400 -noout -in /etc/letsencrypt/live/${DOMAIN}/fullchain.pem; then
        certbot certonly --webroot -w /var/www/certbot --http-01-port 8081 --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -d www.${DOMAIN};
      fi



volumes:
  mysql_data:
  app_uploads:
